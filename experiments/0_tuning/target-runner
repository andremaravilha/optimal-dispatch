#!/usr/bin/env bash
###############################################################################
# This script is to tune the algorithm.
#
# PARAMETERS:
# $1 is the ID of the candidate to be evaluated
# $2 is the instance ID
# $3 is the seed
# $4 is the instance name
# The rest ($* after `shift 4') are parameters for the algorithm
#
# RETURN VALUE:
# This script should print a single numerical value (the value to be minimized).
###############################################################################
error() {
    echo "`TZ=UTC date`: $0: error: $@" >&2
    exit 1
}


# Get parameters.
CONFIG_ID="$1"
INSTANCE_ID="$2"
SEED="$3"
INSTANCE="$4"

shift 4 || error "Not enough parameters"
CONFIG_PARAMS=$*

# Standard and error output files
STDOUT=c${CONFIG_ID}-${INSTANCE_ID}-${SEED}.stdout
STDERR=c${CONFIG_ID}-${INSTANCE_ID}-${SEED}.stderr

# Path to the software.
export PYTHONPATH="../.."
EXE="python3 -m optimaldispatch optimize"

# Fixed parameters that should be always passed.
FIXED_PARAMS="--verbosity 0 --param-file ../../algorithm-params.txt"

# Build a command line with all parameters to run.
mkdir -p ./solutions
${EXE} ${FIXED_PARAMS} --seed ${SEED} ${CONFIG_PARAMS} --instance ${INSTANCE} --solution ./solutions/${CONFIG_ID}+${INSTANCE_ID}_${SEED}.json 1> $STDOUT 2> $STDERR

# The output of the candidate $CONFIG_ID should be written in the file c${CONFIG_ID}.stdout.
# Does this file exist?
if [ ! -s "${STDOUT}" ]; then
    # In this case, the file does not exist. Let's exit with a value different from 0.
    # In this case irace will stop with an error.
    error "${STDOUT}: No such file or directory"
fi

# Ok, the file exist. It contains the whole output.
# This script should return a single numerical value, the best objective value found.
# The following line is to extract this value from the output file.
RESULT=$(cat ${STDOUT} | cut -d ':' -f2 | tr '\n' ' ' | xargs)
COST=$(echo ${RESULT} | cut -d ' ' -f1)
INF_G=$(echo ${RESULT} | cut -d ' ' -f4)
INF_H=$(echo ${RESULT} | cut -d ' ' -f5)
INF_TOTAL=$(echo "${INF_G} + ${INF_H}" | bc)

WEIGHT=0.9
OBJECTIVE=$(echo "((1.0 - ${WEIGHT}) * ${COST}) + (${WEIGHT} * ${INF_TOTAL})" | bc)

if ! [[ "$OBJECTIVE" =~ ^[-+0-9.e]+$ ]] ; then
    error "${STDOUT}: Output is not a number"
fi

# Print it!
echo "$OBJECTIVE"

# We are done with our duty. Clean files and exit with 0 (no error).
rm -f "${STDOUT}" "${STDERR}"
rm -f best.* stat.* cmp.*
exit 0
